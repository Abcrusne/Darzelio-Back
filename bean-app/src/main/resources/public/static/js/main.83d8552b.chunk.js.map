{"version":3,"sources":["Configuration/AppConfig.jsx","Components/Registration/RegistrationFormContainer.jsx","Components/Registration/RegistrationSuccessPresentation.jsx","Components/Login/LoginFormPresentation.js","Components/Login/LoginFormContainer.jsx","Components/LandingPage.jsx","Components/UsersListAdmin/UsersListTablePresentation.jsx","Components/UsersListAdmin/UsersListTableContainer.jsx","Components/NoMatch/NoMatchPresentation.jsx","Components/UsersListAdmin/UpdateUserFormContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","RegistrationFormContainer","props","handleChange","event","preventDefault","validEmailRegex","RegExp","target","name","value","errors","state","letters","firstname","match","length","role","email","test","lastname","setState","console","log","handleSubmit","className","outputUser","id","password","valid","Object","values","forEach","val","validateForm","error","axios","post","then","response","history","push","catch","data","message","alert","this","onSubmit","noValidate","htmlFor","type","onChange","required","Component","RegistrationSuccessPresentation","LoginFormPresentation","context","onPasswdChange","onEmailChange","autoComplete","aria-describedby","to","defaults","withCredentials","LoginFormContainer","userData","URLSearchParams","append","headers","username","LandingPage","style","height","UsersListTablePresentation","users","deleteProduct","searchQuery","handleSearch","search","handleSearchChange","map","index","key","scope","onClick","UsersListTableContainer","componentDidMount","get","delete","err","NoMatch","UpdateUserFormContainer","resetPassword","put","params","res","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83d8552b.chunk.js","sourcesContent":["export const API = 'http://localhost:8081/bean-app';\r\n// export const API = '/bean-app';\r\n// export const API = process.env.PUBLIC_URL;\r\n","import React, { Component } from 'react';\r\nimport { API } from '../../Configuration/AppConfig';\r\nimport axios from 'axios';\r\nimport '../../Style/style.css';\r\n\r\nexport default class RegistrationFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      email: '',\r\n      role: '',\r\n      password: '',\r\n      errors: {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        role: '',\r\n      },\r\n    };\r\n  }\r\n  // componentDidCatch(error, errorInfo){\r\n  //   logErrorToMyService(error,errorInfo);\r\n  // }\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const validEmailRegex = RegExp(\r\n      /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n    );\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    let letters = /^[A-Za-ząčęėįšųūžĄČĘĖĮŠŲŪŽ]+$/;\r\n    switch (name) {\r\n      case 'firstname':\r\n        errors.firstname =\r\n          !value.match(letters) || value.length < 2\r\n            ? 'Vardas turi būti iš raidžių ir ilgesnis nei 1 raidė!'\r\n            : '';\r\n        break;\r\n      case 'role':\r\n        errors.role = !value || value.length === 0 ? 'Pasirinkite rolę!' : '';\r\n        break;\r\n\r\n      case 'email':\r\n        errors.email = validEmailRegex.test(value)\r\n          ? ''\r\n          : 'El.paštas netinkamas!';\r\n        break;\r\n      case 'lastname':\r\n        errors.lastname =\r\n          !value.match(letters) || value.length < 2\r\n            ? 'Pavardė turi būti iš raidžių ir ilgesnė nei 1 raidė!'\r\n            : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value }, () => {\r\n      console.log(errors);\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    const outputUser = {\r\n      email: this.state.email,\r\n      firstname: this.state.firstname,\r\n      id: this.state.id,\r\n      lastname: this.state.lastname,\r\n      role: this.state.role,\r\n      password: this.state.firstname,\r\n      // confirmlastname: this.state.confirmlastname,\r\n    };\r\n    const validateForm = (errors) => {\r\n      let valid = true;\r\n      Object.values(errors).forEach(\r\n        // if we have an error string set valid to false\r\n        (val) => val.length > 0 && (valid = false)\r\n      );\r\n      return valid;\r\n    };\r\n\r\n    if (validateForm(this.state.errors)) {\r\n      axios\r\n        .post(API + '/api/users', outputUser)\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.props.history.push('/admin/sekminga');\r\n        })\r\n\r\n        .catch((error) => {\r\n          if (error.response.data.message === 'Email already taken') {\r\n            alert('Toks el.paštas jau egzistuoja! ');\r\n          } else if (error.response.data.message === 'Invalid field entry') {\r\n            alert('Užpildykite visus laukus!');\r\n          }\r\n          // error.message\r\n          //Error.response.data.message\r\n          //error\r\n          console.log(error);\r\n          // this.setState({error});\r\n        });\r\n    } else {\r\n      console.error('Invalid Form');\r\n    }\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 m-auto shadow p-3 mb-5 bg-white rounded\">\r\n        <div className=\"mb-4\">\r\n          <h3>Užregistruoti naują vartotoją</h3>\r\n        </div>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          noValidate\r\n          className=\"form-group needs-validation\"\r\n        >\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"firstname\" className=\"control-label\">\r\n              Vartotojo vardas*:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"firstname\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              required\r\n            />\r\n            {errors.firstname.length > 0 && (\r\n              <span className=\"error\">{errors.firstname}</span>\r\n            )}\r\n            {/* <div className=\"invalid-feedback\">Įrašykite vardą.</div>\r\n          <div className=\"valid-feedback\"></div> */}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"lastname\" className=\"control-label\">\r\n              Vartotojo pavardė*:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lastname\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              required\r\n            />\r\n            {errors.lastname.length > 0 && (\r\n              <span className=\"error\">{errors.lastname}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"control-label\">\r\n              Vartotojo el.paštas*:\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              required\r\n            />\r\n            {errors.email.length > 0 && (\r\n              <span className=\"error\">{errors.email}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"role\" className=\"control-label\">\r\n              Parinkite rolę*:\r\n            </label>\r\n            <select\r\n              type=\"role\"\r\n              className=\"form-control\"\r\n              name=\"role\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              required\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"PARENT\">Tėvas/globėjas</option>\r\n              <option value=\"EDU\">Švietimo specialistas</option>\r\n            </select>\r\n            {errors.role.length > 0 && (\r\n              <span className=\"error\">{errors.role}</span>\r\n            )}\r\n            <span className=\"invalid-feedback error\">Pasirinkite rolę.</span>\r\n          </div>\r\n          <div> * - privalomi laukai</div>\r\n          <div>\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Registruoti\r\n            </button>\r\n          </div>\r\n          {/* {this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'} */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default class RegistrationSuccessPresentation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\" justify-content-center\">\r\n        <div className=\"col-10\">\r\n          <h5>Registracija sėkminga.</h5>\r\n          {/* <h5>\r\n              Jūsų nurodytu el.paštu išsiųsti prisijungimo duomenys\r\n              </h5> */}\r\n          {/* <Link to={'/admin'} className=\"btn btn-default\">\r\n            Grįžti į pradinį puslapį\r\n          </Link> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LoginFormPresentation = ({email, password, onPasswdChange, onEmailChange, onSubmit}, context) => {\r\n\r\n    return(\r\n        <div className=\"col-lg-5 m-auto shadow p-3 mb-5 bg-white rounded\" onSubmit={onSubmit} >\r\n            <div className=\"mb-4\">\r\n                <h3>Prisijungti</h3>\r\n            </div>\r\n            <form className=\"form-group\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"control-label\">Elektroninio pašto adresas</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        autoComplete=\"username\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        onChange={onEmailChange}\r\n                        value={email}\r\n                        required/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"control-label\">Slaptažodis</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputPassword1\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={onPasswdChange}\r\n                        value={password}\r\n                        required/>\r\n                </div>\r\n                {/*<div className=\"mb-3 form-check\">*/}\r\n                {/*    <input type=\"checkbox\" className=\"form-check-input\" id=\"prisiminti\" required/>*/}\r\n                {/*    <label className=\"form-check-label\" htmlFor=\"prisiminti\">Prisiminti mane</label>*/}\r\n                {/*</div>*/}\r\n                <button type=\"submit\" className=\"mr-4 btn btn-success\">Prisijungti</button>\r\n                <Link to=\"/registracija\">Naujo vartotojo registracija</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginFormPresentation","import React, {Component} from \"react\"\r\n\r\nimport LoginFormPresentation from \"./LoginFormPresentation\"\r\nimport {API} from \"../../Configuration/AppConfig\"\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; // leidžia dalintis cookies\r\n\r\nexport default class LoginFormContainer extends Component {\r\nconstructor() {\r\n    super();\r\n    this.state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n}\r\n\r\n    onEmailChange = event => {\r\n    this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswdChange = event => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n   onSubmit = event => {\r\n    let userData = new URLSearchParams();\r\n    userData.append(\"username\", this.state.email);\r\n    userData.append(\"password\", this.state.password);\r\n\r\n    axios\r\n        .post(`${API}/login`, userData,\r\n            {headers: { \"Content-type\": \"application/x-www-form-urlencoded\"}})\r\n        .then(response => {console.log(`user${response.data.username}logged in` )})\r\n        .catch( error => {console.log(error)});\r\n    event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container mt-5\">\r\n                <div>\r\n\r\n                </div>\r\n                <LoginFormPresentation\r\n                    email={this.state.email}\r\n                    password={this.state.password}\r\n                    onEmailChange={this.onEmailChange}\r\n                    onPasswdChange={this.onPasswdChange}\r\n                    onSubmit={this.onSubmit}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport LoginFormContainer from \"../Components/Login/LoginFormContainer\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <header >\r\n                    <h3 className=\"text-center align-middle mt-3\">Sveiki atvykę į Vaikų darželių informacinę sistemą</h3>\r\n                </header>\r\n                <div className=\"border border-light border-right-0 border-left-0 mt-3 mb-3\">\r\n                    <ul className=\"nav justify-content-end\" style={{height: 40}}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/admin\" className=\"nav-link active\">Darželių admin Login</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <LoginFormContainer/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UsersListTablePresentation = ({\r\n  users,\r\n  deleteProduct,\r\n  // resetPassword,\r\n  searchQuery,\r\n  handleSearch,\r\n  search,\r\n  handleSearchChange,\r\n}) => {\r\n  //neveikia\r\n  //   const roleLt =\r\n  //  users.role === \"PARENT\"\r\n  //     ? \"Tėvas\"\r\n  //     : users.role === 'EDU'\r\n  //     ? \"Švietimo specialistas\"\r\n  //     : \"Nenurodyta\";\r\n  // return(\r\n  //   <input\r\n  //             type=\"text\"\r\n  //             className=\"form-control my-3\"\r\n  //             placeholder=\"Ieškoti pagal el.paštą...\"\r\n  //             value={searchQuery}\r\n  //             onChange={handleSearch}\r\n  //         />\r\n\r\n  return users.map(({ id, firstname, lastname, email, role }, index) => {\r\n    return (\r\n      <tr key={id}>\r\n        <th scope=\"row\">{index + 1}</th>\r\n        <td>{firstname}</td>\r\n        <td> {lastname}</td>\r\n        <td>{email}</td>\r\n        <td>{role}</td>\r\n        <td>\r\n          <button className=\"btn btn-danger\" value={id} onClick={deleteProduct}>\r\n            Ištrinti\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <Link\r\n            className=\"text-decoration-none mr-3\"\r\n            to={`/admin/vartotojai/${id}`}\r\n          >\r\n            Atnaujinti duomenis\r\n          </Link>\r\n        </td>\r\n        <td>\r\n          {/* <button\r\n              className=\"btn btn-success\"\r\n              value={id}\r\n              onClick={resetPassword}\r\n            >\r\n              Reset\r\n            </button> */}\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n};\r\nexport default UsersListTablePresentation;\r\n","import React, { Component } from 'react';\r\nimport { API } from '../../Configuration/AppConfig';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport UsersListTablePresentation from './UsersListTablePresentation';\r\n\r\nexport default class UsersListTableContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      // searchQuery: '',\r\n      // search: \"\",\r\n      // newUsers: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log('component did mount');\r\n    axios\r\n      .get(API + '/api/users')\r\n      .then((response) => this.setState({ users: response.data }))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  \r\n  //   handleSearchChange = (e) => {\r\n  //     this.setState({ search: e.target.value });\r\n  //     axios\r\n  //         .get(`${API}/api/users/emails/${e.target.value}`)\r\n  //         .then(res => this.setState({ newUsers: res.data }))\r\n  //         .catch(err => console.log(err))\r\n  // }\r\n  // handleSearch = (e) => {\r\n\r\n  //   this.setState({ searchQuery: e.target.value });\r\n  //   axios.get(`${API}/api/users/${e.target.value}`).then((response) => {\r\n  //     this.setState({ users: response.data });\r\n  //   });\r\n  // };\r\n  deleteProduct = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .delete(`${API}/api/users/${event.target.value}`)\r\n      .then(() => {\r\n        axios\r\n          .get(`${API}/api/users`)\r\n          .then((response) => this.setState({ users: response.data }));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // resetPassword = (event) => {\r\n  //   event.preventDefault();\r\n  //   // const outputUser = {\r\n  //   //   password: this.state.firstname,\r\n  //   // };\r\n  //   axios\r\n  //     .put(\r\n  //       `${API}/api/users/${this.state.id}`,\r\n  //       // outputUser\r\n  //       { password: this.state.firstname }\r\n  //     )\r\n  //     .then((response) => {\r\n  //       console.log(response);\r\n  //       alert('Vartotojo slaptažodis atsatatytas į pirminį');\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <Link to={`/admin/registracija`} className=\"btn btn-primary mb-5\">\r\n          Pridėti naują vartotoją\r\n        </Link>\r\n        <div>\r\n          {/* <input\r\n            type=\"text\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Ieškoti pagal el.paštą...\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleSearch}\r\n        /> */}\r\n          {/* <input className='my-3' type='text' value={this.search} onChange={this.handleSearchChange} placeholder={'Ieškoti pagal el.paštą'} /> */}\r\n        </div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Vardas</th>\r\n              <th scope=\"col\">Pavardė</th>\r\n              <th scope=\"col\">El.paštas</th>\r\n              <th scope=\"col\">Rolė</th>\r\n              <th scope=\"col\">Ištrinti vartotoją</th>\r\n              <th scope=\"col\">Atnaujinti vartotojo duomenis</th>\r\n              {/* <th scope=\"col\">Atstatyti slaptažodį į pirminį</th> */}\r\n            </tr>\r\n          </thead>\r\n          {this.state.users.length > 0 && (\r\n            <tbody>\r\n              <UsersListTablePresentation\r\n                users={this.state.users}\r\n                deleteProduct={this.deleteProduct}\r\n                // resetPassword={this.resetPassword}\r\n                // searchQuery={this.searchQuery}\r\n                // handleSearch={this.handleSearch}\r\n              />\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst NoMatch = (props) => {\r\n  const goApp = () => props.history.push('/');\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\" m-5 text-center \">\r\n        Neteisingas maršrutas\r\n        <button className=\"btn btn-dark ml-3\" onClick={goApp}>\r\n          Grįžti atgal į pradinį prisijungimo puslapį\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from 'react';\r\nimport { API } from '../../Configuration/AppConfig';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class UpdateUserFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      firstname: '',\r\n      lastname: '',\r\n      email: '',\r\n      role: '',\r\n      password: '',\r\n      errors: {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        role: '',\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log('component did mount');\r\n    axios\r\n      .get(`${API}/api/users/${this.props.match.params.id}`)\r\n      .then((res) =>\r\n        this.setState({\r\n          id: res.data.id,\r\n          firstname: res.data.firstname,\r\n          lastname: res.data.lastname,\r\n          email: res.data.email,\r\n          role: res.data.role,\r\n          password: res.data.password,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  resetPassword = (event) => {\r\n    event.preventDefault();\r\n    // const outputUser = {\r\n    //   password: this.state.firstname,\r\n    // };\r\n    // axios\r\n    // .put(\r\n    //   `${API}/api/users/${this.state.id}`,\r\n    //   // outputUser\r\n    //   { password: this.state.firstname }\r\n    // )\r\n    // .then((response) => {\r\n    //   console.log(response);\r\n    //   alert('Vartotojo slaptažodis atsatatytas į pirminį');\r\n    // });\r\n    axios\r\n      .put(\r\n        `${API}/api/users/${this.state.id}`,\r\n        // outputUser)\r\n        {\r\n          id: this.state.id,\r\n          firstname: this.state.firstname,\r\n          lastname: this.state.lastname,\r\n          email: this.state.email,\r\n          role: this.state.role,\r\n          password: this.state.firstname,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert('Vartotojo slaptažodis atsatatytas į pirminį');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const validEmailRegex = RegExp(\r\n      /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n    );\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    let letters = /^[A-Za-ząčęėįšųūžĄČĘĖĮŠŲŪŽ]+$/;\r\n    switch (name) {\r\n      case 'firstname':\r\n        errors.firstname =\r\n          !value.match(letters) || value.length < 2\r\n            ? 'Vardas turi būti iš raidžių ir ilgesnis nei 1 raidė!'\r\n            : '';\r\n        break;\r\n      case 'role':\r\n        errors.role = !value || value.length === 0 ? 'Pasirinkite rolę!' : '';\r\n        break;\r\n\r\n      case 'email':\r\n        errors.email = validEmailRegex.test(value)\r\n          ? ''\r\n          : 'El.paštas netinkamas!';\r\n        break;\r\n      case 'lastname':\r\n        errors.lastname =\r\n          !value.match(letters) || value.length < 2\r\n            ? 'Pavardė turi būti iš raidžių ir ilgesnė nei 1 raidė!'\r\n            : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value }, () => {\r\n      console.log(errors);\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    // const outputUser = {\r\n    //   email: this.state.email,\r\n    //   firstname: this.state.firstname,\r\n    //     id: this.state.id,\r\n    //   lastname: this.state.lastname,\r\n    //   role: this.state.role,\r\n    //     password: this.state.firstname,\r\n    // confirmlastname: this.state.confirmlastname,\r\n    // };\r\n    const validateForm = (errors) => {\r\n      let valid = true;\r\n      Object.values(errors).forEach(\r\n        // if we have an error string set valid to false\r\n        (val) => val.length > 0 && (valid = false)\r\n      );\r\n      return valid;\r\n    };\r\n\r\n    if (validateForm(this.state.errors)) {\r\n      axios\r\n        .put(\r\n          `${API}/api/users/${this.state.id}`,\r\n          // outputUser)\r\n          {\r\n            id: this.state.id,\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            email: this.state.email,\r\n            role: this.state.role,\r\n            //password: this.state.password,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.props.history.push('/admin/vartotojai');\r\n        })\r\n\r\n        .catch((error) => {\r\n          if (error.response.data.message === 'Email already taken') {\r\n            alert('Toks el.paštas jau egzistuoja! ');\r\n          } else if (error.response.data.message === 'Invalid field entry') {\r\n            alert('Užpildykite visus laukus!');\r\n          }\r\n          // error.message\r\n          //Error.response.data.message\r\n          //error\r\n          console.log(error);\r\n          // this.setState({error});\r\n        });\r\n    } else {\r\n      console.error('Invalid Form');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 m-auto shadow p-3 mb-5 bg-white rounded\">\r\n        <div className=\"mb-4\">\r\n          <h3>Atnaujinti vartotojo duomenis</h3>\r\n        </div>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          noValidate\r\n          className=\"form-group needs-validation\"\r\n        >\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"firstname\" className=\"control-label\">\r\n              Vartotojo vardas*:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"firstname\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              value={this.state.firstname}\r\n              // required\r\n            />\r\n            {errors.firstname.length > 0 && (\r\n              <span className=\"error\">{errors.firstname}</span>\r\n            )}\r\n            {/* <div className=\"invalid-feedback\">Įrašykite vardą.</div>\r\n          <div className=\"valid-feedback\"></div> */}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"lastname\" className=\"control-label\">\r\n              Vartotojo pavardė*:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lastname\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              value={this.state.lastname}\r\n            />\r\n            {errors.lastname.length > 0 && (\r\n              <span className=\"error\">{errors.lastname}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"control-label\">\r\n              Vartotojo el.paštas*:\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              value={this.state.email}\r\n            />\r\n            {errors.email.length > 0 && (\r\n              <span className=\"error\">{errors.email}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"role\" className=\"control-label\">\r\n              Parinkite rolę*:\r\n            </label>\r\n            <select\r\n              type=\"role\"\r\n              className=\"form-control\"\r\n              name=\"role\"\r\n              onChange={this.handleChange}\r\n              noValidate\r\n              value={this.state.role}\r\n              required\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"PARENT\">Tėvas/globėjas</option>\r\n              <option value=\"EDU\">Švietimo specialistas</option>\r\n            </select>\r\n            {errors.role.length > 0 && (\r\n              <span className=\"error\">{errors.role}</span>\r\n            )}\r\n            <span className=\"invalid-feedback error\">Pasirinkite rolę.</span>\r\n          </div>\r\n\r\n          <div> * - privalomi laukai</div>\r\n\r\n          <div>\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Išsaugoti\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-warning\"\r\n              onClick={this.resetPassword}\r\n            >\r\n              Atstatyti slaptažodį į pirminį\r\n            </button>\r\n          </div>\r\n          {/* {this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'} */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//   componentDidMount() {\r\n//     axios\r\n//         .get(`${API}/api/users/${this.props.match.params.id}`)\r\n//         .then(res => this.setState({\r\n//             firstname: res.data.firstname,\r\n//             lastname: res.data.lastname,\r\n//             email: res.data.email,\r\n//             role: res.data.role,\r\n//         }))\r\n//         .catch(err => console.log(err))\r\n\r\n// }\r\n\r\n// handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     this.setState({ [name]: value });\r\n// };\r\n// handleSubmit = (event) => {\r\n//   event.preventDefault();\r\n\r\n//   axios.put(`${API}api/vartotojai/${this.state.id}`, {\r\n//         \"firstname\": this.state.firstname,\r\n//         \"lastname\": this.state.lastname,\r\n//         \"email\": this.state.email,\r\n//         \"role\": this.state.role,\r\n//   }).then(() => this.props.history.push('/admin/vartotojai'))\r\n\r\n// }\r\n// render() {\r\n//   if (this.state.user !== null) {\r\n//       const { firstname, lastname, email, role } = this.state;\r\n//       return (\r\n//           <div>\r\n//               <form className=\"container my-5\" onSubmit={this.handleSubmit}>\r\n//                   <div className=\"form-group\">\r\n//                       <label htmlFor=\"productfirstname\">firstname</label>\r\n//                       <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"productfirstname\" name=\"firstname\" value={firstname} />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                       <label htmlFor=\"productlastname\">lastname</label>\r\n//                       <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"productlastname\" name=\"lastname\" value={lastname} />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                       <label htmlFor=\"productemail\">email</label>\r\n//                       <textarea onChange={this.handleChange} className=\"form-control\" id=\"productemail\" rows=\"3\" name=\"email\" value={email}></textarea>\r\n//                   </div>\r\n//                   <div className=\"row\">\r\n//                       <div className=\"form-group col-6\">\r\n//                           <label htmlFor=\"productrole\">role</label>\r\n//                           <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id=\"productrole\" name=\"role\" value={role} />\r\n//                       </div>\r\n\r\n//                   </div>\r\n//                   <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n//               </form>\r\n//           </div >\r\n//       )\r\n//   } else {\r\n//       return (<div>Loading...</div>)\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport RegistrationFormContainer from './Components/Registration/RegistrationFormContainer';\r\nimport RegistrationSuccessPresentation from './Components/Registration/RegistrationSuccessPresentation';\r\nimport LoginFormContainer from './Components/Login/LoginFormContainer';\r\nimport LandingPage from './Components/LandingPage';\r\nimport UsersListTableContainer from './Components/UsersListAdmin/UsersListTableContainer';\r\nimport NoMatch from './Components/NoMatch/NoMatchPresentation';\r\nimport UpdateUserFormContainer from './Components/UsersListAdmin/UpdateUserFormContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/admin/registracija\"\r\n            component={RegistrationFormContainer}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/sekminga\"\r\n            component={RegistrationSuccessPresentation}\r\n          />\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/vartotojai\"\r\n            component={UsersListTableContainer}\r\n          />\r\n          <Route\r\n            path=\"/admin/vartotojai/:id\"\r\n            component={UpdateUserFormContainer}\r\n          />\r\n          <Route path=\"*\" component={NoMatch} />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ndocument.title = \"Vaikų darželių informacinė sistema\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}