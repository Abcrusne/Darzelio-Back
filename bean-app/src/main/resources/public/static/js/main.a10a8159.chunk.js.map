{"version":3,"sources":["Configuration/AppConfig.jsx","Components/Registration/RegistrationFormPresentation.jsx","Components/Registration/RegistrationFormContainer.jsx","Components/Registration/RegistrationSuccessPresentation.jsx","Components/Login/LoginFormPresentation.js","Components/Login/LoginFormContainer.jsx","Components/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","RegistrationFormPresentation","handleChange","handleSubmit","firstname","lastname","email","role","password","className","noValidate","onSubmit","type","id","placeholder","value","onChange","required","htmlFor","to","ReactJoiValidations","setJoi","Joi","RegistrationFormContainer","props","schema","string","trim","min","max","alphanum","minDomainAtoms","validate","result","state","console","log","event","target","setState","preventDefault","outputUser","axios","post","then","response","history","push","catch","error","status","alert","this","Component","RegistrationSuccessPresentation","LoginFormPresentation","context","onPasswdChange","onEmailChange","autoComplete","aria-describedby","defaults","withCredentials","LoginFormContainer","userData","URLSearchParams","append","headers","data","username","LandingPage","style","height","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a10a8159.chunk.js","sourcesContent":["export const API = 'http://localhost:8081/bean-app';\r\n// export const API = '/bean-app';\r\n// export const API = process.env.PUBLIC_URL;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import RegistrationSuccessPresentation from './RegistrationSuccessPresentation';\r\n\r\nfunction RegistrationFormPresentation({\r\n  handleChange,\r\n  handleSubmit,\r\n  firstname,\r\n  lastname,\r\n  email,\r\n  role,\r\n  password,\r\n  // emailError,\r\n  // confirmPassword,\r\n  // error,\r\n  ...otherProps\r\n}) {\r\n  // if (error){\r\n  //   return <div>Error: {error.message} Toks el.paštas jau egzistuoja.</div>;\r\n  // } else {\r\n  return (\r\n    <form\r\n      className=\"col-lg-12 offset-lg-4 needs-validation\"\r\n      noValidate\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\">\r\n          <b>Vartotojo vardas</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"firstname\"\r\n            placeholder=\"Vardas\"\r\n            value={firstname}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\">Įrašykite vardą.</div>\r\n          <div className=\"valid-feedback\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\">\r\n          <b>Vartotojo pavardė</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"lastname\"\r\n            placeholder=\"Pavardė\"\r\n            value={lastname}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\">Įrašykite pavardę.</div>\r\n          <div className=\"valid-feedback\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\" htmlFor=\"email\">\r\n          <b>Vartotojo el.paštas</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <input\r\n            type=\"email\"\r\n            className=\" email form-control\"\r\n            id=\"email\"\r\n            placeholder=\"el.paštas\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\">Įrašykite el.paštą.</div>\r\n          <div className=\"valid-feedback\"></div>\r\n          {/* {emailError ? { emailError } : null} */}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\">\r\n          <b>Slaptažodis</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div> */}\r\n      {/* <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\">\r\n          <b>Patvirtinkite slaptažodį</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div> */}\r\n      <div className=\"form-group\">\r\n        <label className=\"col-sm-2 control-label\">\r\n          <b>Parinkite vartotojo rolę</b>\r\n        </label>\r\n        <div className=\"col-sm-3\">\r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"role\"\r\n            placeholder=\"Role\"\r\n            value={role}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\"></option>\r\n            <option value=\"PARENT\">Tėvas/globėjas</option>\r\n            <option value=\"KINDERGARTEN\">Švietimo specialistas</option>\r\n          </select>\r\n          <div className=\"invalid-feedback\">Pasirinkite rolę.</div>\r\n          <div className=\"valid-feedback\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Link to={'/admin'} className=\"btn btn-default\">\r\n          Grįžti į pradinį puslapį\r\n        </Link>\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Registruotis\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n// }\r\nexport default RegistrationFormPresentation;\r\n","import React, { Component } from 'react';\r\nimport { API } from '../../Configuration/AppConfig';\r\nimport axios from 'axios';\r\nimport RegistrationFormPresentation from './RegistrationFormPresentation';\r\nimport ReactJoiValidations from 'react-joi-validation';\r\nimport Joi from 'joi-browser';\r\n\r\nReactJoiValidations.setJoi(Joi);\r\n\r\n\r\n\r\nexport default class RegistrationFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      email: '',\r\n      role: '',\r\n      password: '',\r\n      // emailError: '',\r\n      // error: null\r\n      // confirmPassword: '',\r\n      // id: 0,\r\n    };\r\n  }\r\n schema = {\r\n    firstname: Joi.string()\r\n      .trim()\r\n      .min(2)\r\n      .max(30)\r\n      .alphanum()\r\n     .required(),\r\n  \r\n    lastname: Joi.string()\r\n      .min(2)\r\n      .max(50)\r\n      .alphanum()\r\n      .required(),\r\n  \r\n    email: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .required(),\r\n  };\r\n  \r\nvalidate = () => {\r\n  const result = Joi.validate(this.state.firstname, this.state.lastname,this.state.email, this.schema)\r\n  console.log(result);\r\n}\r\n  // validate = () => {\r\n  //   let emailError = '';\r\n  //   if (!this.state.email.includes(\"@\") && !this.state.email.includes(\".\")){\r\n  //     emailError=\"Toks email netinkamas\"\r\n  //   }\r\n  //   if (emailError){\r\n  //     this.setState({emailError});\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const id = target.id; // iš input tag'o gaunam būsenos objekto raktą reikšmei nustatyti\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.validate();\r\n    event.target.className += ' was-validated';\r\n    //sitos dalies prireiks kai pats tevas gales keisti\r\n    // if (this.state.password !== this.state.confirmPassword) {\r\n    //   alert('Slaptažodžiai nesutampa!');\r\n    // } else {\r\n    //console.log(this.state);\r\n    // if(this.state.error){\r\n    //   alert (\"egzistuoja toks el pastas\")\r\n    // }\r\n    // else{\r\n\r\n    const outputUser = {\r\n      email: this.state.email,\r\n      firstname: this.state.firstname,\r\n      id: this.state.id,\r\n      lastname: this.state.lastname,\r\n      role: this.state.role,\r\n      password: this.state.firstname,\r\n      // confirmPassword: this.state.confirmPassword,\r\n    };\r\n    // const isValid = this.validate();\r\n    // if (isValid) {\r\n    // }\r\n    axios\r\n      .post(API + '/api/users', outputUser)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push('/admin/sekminga');\r\n      })\r\n\r\n      .catch((error) => {\r\n        if (error.response.status === 405) {\r\n          alert('Toks el.paštas jau egzistuoja!');\r\n        }\r\n        console.log(error);\r\n        // this.setState({error});\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RegistrationFormPresentation\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          firstname={this.state.firstname}\r\n          lastname={this.state.lastname}\r\n          email={this.state.email}\r\n          role={this.state.role}\r\n          password={this.state.password}\r\n          // emailError={this.emailError}\r\n          // confirmPassword={this.state.confirmPassword}\r\n          // error={this.state.error}\r\n          {...this.state}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default class RegistrationSuccessPresentation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\" justify-content-center\">\r\n        <div className=\"col-10\">\r\n          <h5>Registracija sėkminga.</h5>\r\n          {/* <h5>\r\n              Jūsų nurodytu el.paštu išsiųsti prisijungimo duomenys\r\n              </h5> */}\r\n          {/* <Link to={'/admin'} className=\"btn btn-default\">\r\n            Grįžti į pradinį puslapį\r\n          </Link> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LoginFormPresentation = ({email, password, onPasswdChange, onEmailChange, onSubmit}, context) => {\r\n\r\n    return(\r\n        <div className=\"col-lg-5 m-auto shadow p-3 mb-5 bg-white rounded\" onSubmit={onSubmit} >\r\n            <div className=\"mb-4\">\r\n                <h3>Prisijungti</h3>\r\n            </div>\r\n            <form className=\"form-group\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"control-label\">Elektroninio pašto adresas</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        autoComplete=\"username\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        onChange={onEmailChange}\r\n                        value={email}\r\n                        required/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"control-label\">Slaptažodis</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputPassword1\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={onPasswdChange}\r\n                        value={password}\r\n                        required/>\r\n                </div>\r\n                {/*<div className=\"mb-3 form-check\">*/}\r\n                {/*    <input type=\"checkbox\" className=\"form-check-input\" id=\"prisiminti\" required/>*/}\r\n                {/*    <label className=\"form-check-label\" htmlFor=\"prisiminti\">Prisiminti mane</label>*/}\r\n                {/*</div>*/}\r\n                <button type=\"submit\" className=\"mr-4 btn btn-success\">Prisijungti</button>\r\n                <Link to=\"/registracija\">Naujo vartotojo registracija</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginFormPresentation","import React, {Component} from \"react\"\r\n\r\nimport LoginFormPresentation from \"./LoginFormPresentation\"\r\nimport {API} from \"../../Configuration/AppConfig\"\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; // leidžia dalintis cookies\r\n\r\nexport default class LoginFormContainer extends Component {\r\nconstructor() {\r\n    super();\r\n    this.state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n}\r\n\r\n    onEmailChange = event => {\r\n    this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswdChange = event => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n   onSubmit = event => {\r\n    let userData = new URLSearchParams();\r\n    userData.append(\"username\", this.state.email);\r\n    userData.append(\"password\", this.state.password);\r\n\r\n    axios\r\n        .post(`${API}/login`, userData,\r\n            {headers: { \"Content-type\": \"application/x-www-form-urlencoded\"}})\r\n        .then(response => {console.log(`user${response.data.username}logged in` )})\r\n        .catch( error => {console.log(error)});\r\n    event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container mt-5\">\r\n                <div>\r\n\r\n                </div>\r\n                <LoginFormPresentation\r\n                    email={this.state.email}\r\n                    password={this.state.password}\r\n                    onEmailChange={this.onEmailChange}\r\n                    onPasswdChange={this.onPasswdChange}\r\n                    onSubmit={this.onSubmit}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport LoginFormContainer from \"../Components/Login/LoginFormContainer\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <header >\r\n                    <h3 className=\"text-center align-middle mt-3\">Sveiki atvykę į Vaikų darželių informacinę sistemą</h3>\r\n                </header>\r\n                <div className=\"border border-light border-right-0 border-left-0 mt-3 mb-3\">\r\n                    <ul className=\"nav justify-content-end\" style={{height: 40}}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/admin\" className=\"nav-link active\">Darželių admin Login</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <LoginFormContainer/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport RegistrationFormContainer from './Components/Registration/RegistrationFormContainer';\r\nimport RegistrationSuccessPresentation from './Components/Registration/RegistrationSuccessPresentation';\r\nimport LoginFormContainer from \"./Components/Login/LoginFormContainer\";\r\nimport LandingPage from \"./Components/LandingPage\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n\r\n          <Route\r\n            exact\r\n            path=\"/admin/registracija\"\r\n            component={RegistrationFormContainer}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin/sekminga\"\r\n            component={RegistrationSuccessPresentation}\r\n          />\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}